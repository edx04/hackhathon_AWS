import { OpenSearchClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../OpenSearchClient";
import { DescribeDomainConfigRequest, DescribeDomainConfigResponse } from "../models/models_0";
import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, MiddlewareStack, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer } from "@aws-sdk/types";
export interface DescribeDomainConfigCommandInput extends DescribeDomainConfigRequest {
}
export interface DescribeDomainConfigCommandOutput extends DescribeDomainConfigResponse, __MetadataBearer {
}
/**
 * <p>Provides cluster configuration information about the specified domain, such as the state, creation
 *       date, update version, and update date for cluster options.
 *     </p>
 * @example
 * Use a bare-bones client and the command you need to make an API call.
 * ```javascript
 * import { OpenSearchClient, DescribeDomainConfigCommand } from "@aws-sdk/client-opensearch"; // ES Modules import
 * // const { OpenSearchClient, DescribeDomainConfigCommand } = require("@aws-sdk/client-opensearch"); // CommonJS import
 * const client = new OpenSearchClient(config);
 * const command = new DescribeDomainConfigCommand(input);
 * const response = await client.send(command);
 * ```
 *
 * @see {@link DescribeDomainConfigCommandInput} for command's `input` shape.
 * @see {@link DescribeDomainConfigCommandOutput} for command's `response` shape.
 * @see {@link OpenSearchClientResolvedConfig | config} for command's `input` shape.
 *
 */
export declare class DescribeDomainConfigCommand extends $Command<DescribeDomainConfigCommandInput, DescribeDomainConfigCommandOutput, OpenSearchClientResolvedConfig> {
    readonly input: DescribeDomainConfigCommandInput;
    constructor(input: DescribeDomainConfigCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: OpenSearchClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeDomainConfigCommandInput, DescribeDomainConfigCommandOutput>;
    private serialize;
    private deserialize;
}
