import { OpenSearchClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../OpenSearchClient";
import { DescribeInstanceTypeLimitsRequest, DescribeInstanceTypeLimitsResponse } from "../models/models_0";
import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, MiddlewareStack, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer } from "@aws-sdk/types";
export interface DescribeInstanceTypeLimitsCommandInput extends DescribeInstanceTypeLimitsRequest {
}
export interface DescribeInstanceTypeLimitsCommandOutput extends DescribeInstanceTypeLimitsResponse, __MetadataBearer {
}
/**
 * <p>
 *       Describe the limits for a given instance type and OpenSearch or Elasticsearch version.
 *       When modifying an existing domain, specify the
 *       <code>
 *         <a>DomainName</a>
 *       </code>
 *       to see which limits you can modify.
 *     </p>
 * @example
 * Use a bare-bones client and the command you need to make an API call.
 * ```javascript
 * import { OpenSearchClient, DescribeInstanceTypeLimitsCommand } from "@aws-sdk/client-opensearch"; // ES Modules import
 * // const { OpenSearchClient, DescribeInstanceTypeLimitsCommand } = require("@aws-sdk/client-opensearch"); // CommonJS import
 * const client = new OpenSearchClient(config);
 * const command = new DescribeInstanceTypeLimitsCommand(input);
 * const response = await client.send(command);
 * ```
 *
 * @see {@link DescribeInstanceTypeLimitsCommandInput} for command's `input` shape.
 * @see {@link DescribeInstanceTypeLimitsCommandOutput} for command's `response` shape.
 * @see {@link OpenSearchClientResolvedConfig | config} for command's `input` shape.
 *
 */
export declare class DescribeInstanceTypeLimitsCommand extends $Command<DescribeInstanceTypeLimitsCommandInput, DescribeInstanceTypeLimitsCommandOutput, OpenSearchClientResolvedConfig> {
    readonly input: DescribeInstanceTypeLimitsCommandInput;
    constructor(input: DescribeInstanceTypeLimitsCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: OpenSearchClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeInstanceTypeLimitsCommandInput, DescribeInstanceTypeLimitsCommandOutput>;
    private serialize;
    private deserialize;
}
