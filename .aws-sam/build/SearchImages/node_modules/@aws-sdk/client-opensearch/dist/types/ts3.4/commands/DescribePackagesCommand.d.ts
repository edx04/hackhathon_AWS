import { OpenSearchClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../OpenSearchClient";
import { DescribePackagesRequest, DescribePackagesResponse } from "../models/models_0";
import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, MiddlewareStack, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer } from "@aws-sdk/types";
export interface DescribePackagesCommandInput extends DescribePackagesRequest {
}
export interface DescribePackagesCommandOutput extends DescribePackagesResponse, __MetadataBearer {
}
/**
 * <p>Describes all packages available to Amazon OpenSearch Service domains. Includes options for filtering, limiting the number of results,
 *       and pagination.
 *     </p>
 * @example
 * Use a bare-bones client and the command you need to make an API call.
 * ```javascript
 * import { OpenSearchClient, DescribePackagesCommand } from "@aws-sdk/client-opensearch"; // ES Modules import
 * // const { OpenSearchClient, DescribePackagesCommand } = require("@aws-sdk/client-opensearch"); // CommonJS import
 * const client = new OpenSearchClient(config);
 * const command = new DescribePackagesCommand(input);
 * const response = await client.send(command);
 * ```
 *
 * @see {@link DescribePackagesCommandInput} for command's `input` shape.
 * @see {@link DescribePackagesCommandOutput} for command's `response` shape.
 * @see {@link OpenSearchClientResolvedConfig | config} for command's `input` shape.
 *
 */
export declare class DescribePackagesCommand extends $Command<DescribePackagesCommandInput, DescribePackagesCommandOutput, OpenSearchClientResolvedConfig> {
    readonly input: DescribePackagesCommandInput;
    constructor(input: DescribePackagesCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: OpenSearchClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribePackagesCommandInput, DescribePackagesCommandOutput>;
    private serialize;
    private deserialize;
}
